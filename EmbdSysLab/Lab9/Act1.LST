A51 MACRO ASSEMBLER  ACT1                                                                 03/27/2013 10:59:45 PAGE     1


MACRO ASSEMBLER A51 V8.02b
OBJECT MODULE PLACED IN Act1.OBJ
ASSEMBLER INVOKED BY: C:\Program_Files\Keil\C51\BIN\A51.EXE Act1.asm SET(SMALL) DEBUG EP

LOC  OBJ            LINE     SOURCE

                       1     ; Constants
  00A2                 2     LCD_RS8                 BIT     P2.2
  00A3                 3     LCD_RW8                 BIT     P2.3
  00A4                 4     LCD_E8                  BIT     P2.4
  00A5                 5     LCD_LED8                BIT     P2.5
  0080                 6     LCD_PORT8               EQU     P0
                       7     
                       8     ; Program
0000                   9     org 0h
0000 D2A5             10     setb LCD_LED8
0002 7438             11     mov a, #38h
0004 115D             12     acall lcdCmd
0006 7406             13     mov a, #06h
0008 115D             14     acall lcdCmd
000A 740C             15     mov a, #0ch
000C 115D             16     acall lcdCmd
000E 7401             17     mov a, #01h
0010 115D             18     acall lcdCmd
0012 7486             19     mov a, #86h
0014 115D             20     acall lcdCmd    ;1st line 6th character
0016 7444             21     mov a, #'D'
0018 1163             22     acall lcdData
001A 744E             23     mov a, #'N'
001C 1163             24     acall lcdData
001E 7441             25     mov a, #'A'
0020 1163             26     acall lcdData
0022 74C3             27     mov a, #0c3h
0024 115D             28     acall lcdCmd    ;2nd Line 3rd character
0026 7454             29     mov a, #'T'
0028 1163             30     acall lcdData
002A 7445             31     mov a, #'E'
002C 1163             32     acall lcdData
002E 7443             33     mov a, #'C'
0030 1163             34     acall lcdData
0032 7448             35     mov a, #'H'
0034 1163             36     acall lcdData
0036 744E             37     mov a, #'N'
0038 1163             38     acall lcdData
003A 744F             39     mov a, #'O'
003C 1163             40     acall lcdData
003E 744C             41     mov a, #'L'
0040 1163             42     acall lcdData
0042 744F             43     mov a, #'O'
0044 1163             44     acall lcdData
0046 7447             45     mov a, #'G'
0048 1163             46     acall lcdData
004A 7459             47     mov a, #'Y'
004C 1163             48     acall lcdData
004E                  49     wait:
004E 80FE             50     sjmp wait
                      51     
                      52     
                      53     
                      54     ; lcdWrt8(A = data, C = RS)
                      55     ; Writes a data to LCD port
0050                  56     lcdWrt8:
0050 FF               57     mov r7, a
0051 F580             58     mov LCD_PORT8, a
A51 MACRO ASSEMBLER  ACT1                                                                 03/27/2013 10:59:45 PAGE     2

0053 C2A3             59     clr LCD_RW8             ; write
0055 92A2             60     mov LCD_RS8, C
0057 D2A4             61     setb LCD_E8             ; hi-lo pulse (latch data)
0059 C2A4             62     clr LCD_E8
005B EF               63     mov a, r7
005C 22               64     ret
                      65     
                      66     ; lcdCmd(A = command)
                      67     ; Sends a command to LCD
005D                  68     lcdCmd:
005D 1169             69     acall lcdReady
005F C3               70     clr C
0060 1150             71     acall lcdWrt8
                      72     ;mov LCD_PORT8, a       
                      73     ;clr LCD_RW8            ; write
                      74     ;clr LCD_RS8            ; command
                      75     ;setb LCD_E8            ; hi-lo pulse (latch data)
                      76     ;clr LCD_E8
0062 22               77     ret
                      78     
                      79     
                      80     
                      81     ; lcdData(A = data)
                      82     ; Sends an 8bit data to LCD
0063                  83     lcdData:        
0063 1169             84     acall lcdReady
0065 D3               85     setb C
0066 1150             86     acall lcdWrt8
                      87     ;mov LCD_PORT8, a       
                      88     ;clr LCD_RW8            ; write
                      89     ;setb LCD_RS8           ; data
                      90     ;setb LCD_E8            ; hi-lo pulse (latch data)
                      91     ;clr LCD_E8
0068 22               92     ret     
                      93     
                      94     ; lcdReady()
                      95     ; Checks the busy flag & waits
                      96     ; till LCD is ready to ready 
                      97     ; for next instruction
0069                  98     lcdReady:
0069 7580FF           99     mov LCD_PORT8, #0FFh
006C C2A2            100     clr LCD_RS8             ; command
006E D2A3            101     setb LCD_RW8            ; write
0070                 102     is_lcd_ready:   
0070 C2A4            103     clr LCD_E8
0072 D2A4            104     setb LCD_E8
0074 2087F9          105     jb LCD_PORT8.7, is_lcd_ready
0077 C2A4            106     clr LCD_E8
0079 22              107     ret
                     108     end
A51 MACRO ASSEMBLER  ACT1                                                                 03/27/2013 10:59:45 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

IS_LCD_READY . . .  C ADDR   0070H   A   
LCDCMD . . . . . .  C ADDR   005DH   A   
LCDDATA. . . . . .  C ADDR   0063H   A   
LCDREADY . . . . .  C ADDR   0069H   A   
LCDWRT8. . . . . .  C ADDR   0050H   A   
LCD_E8 . . . . . .  B ADDR   00A0H.4 A   
LCD_LED8 . . . . .  B ADDR   00A0H.5 A   
LCD_PORT8. . . . .  D ADDR   0080H   A   
LCD_RS8. . . . . .  B ADDR   00A0H.2 A   
LCD_RW8. . . . . .  B ADDR   00A0H.3 A   
P0 . . . . . . . .  D ADDR   0080H   A   
P2 . . . . . . . .  D ADDR   00A0H   A   
WAIT . . . . . . .  C ADDR   004EH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
